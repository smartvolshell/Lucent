1、从数据库中将数据导出
	mongoexport -d database_name -c collection_name -o output_path

 参数说明
	-d 数据库名
	-c 集合名
	-o 导出路径+文件名
	--csv 指定导出的文件格式
		-f 指定导出的列
	【如果要导出非BSON格式(默认bson格式)，需要指明格式--csv。如果导出指定字段使用-f 导出】
可以通过mongoexport --help 查看命令的详细使用

2、数据的导入
	mongoimport -d database_name -c collection_name input_path

	【指定导入csv文件
		mongoimport -d my_mongodb -c user --type csv --headerline --file user_csv.dat
		--type csv 指定类型
		--headerline 忽略第一行，因为第一行是列名
		--file 指定文件】

3、数据库的备份
	mongodump 
		 -d [ --db ] arg                       database to use
		 -c [ --collection ] arg               collection to use (some commands)
		 -o [ --out ] arg (=dump)              output directory or "-" for stdout 
			会在相应目录中生成arg的文件夹

4、数据库的恢复
	恢复所有的集合
		mongorestore --db db_name dump_path
			--db 指定恢复之后存储的数据库名
			dump_path 原备份文件的存储位置
	恢复指定集合
		mongorestore --collection collection_name --db db_name dump_path
			--collection 指定在数据库中将以什么名字存在


fsync:
	mongodump /mongorestore可以实现数据库的无停机备份和恢复，但是我们失去了实时查看数据库视图的能力。
	MongoDB的fsync命令可以在运行时复制数据目录还不会损毁数据。
	fsync,会强制将缓冲区的数据写入磁盘，同时还可以上锁。
		db.runCommand('fsync':1,'lock':1) --强制执行写入锁。